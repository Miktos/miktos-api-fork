version: '3.8'

services:
  backend:
    build: .
    restart: unless-stopped
    ports:
      - "${PORT:-8000}:8000"
    environment:
      - DATABASE_URL= "sqlite:///:memory:"
      - OPENAI_API_KEY= "test_key"
      - ANTHROPIC_API_KEY= "test_key"
      - GOOGLE_API_KEY= "test_key"
      - PORT=8000
      - DEBUG= "True"
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_URL=redis://redis:6379/0
      - RESPONSE_CACHE_ENABLED=true
    volumes:
      - ./data:/app/data
    depends_on:
      - redis

  # Redis service for caching
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  test:
    build: .
    environment:
      - DATABASE_URL="sqlite:///:memory:"
      - OPENAI_API_KEY= "test_key"
      - ANTHROPIC_API_KEY= "test_key"
      - GOOGLE_API_KEY= "test_key"
      - DEBUG=True
    command: ["pytest", "-v"]

  # Uncomment the database service when you're ready to use it
  # db:
  #   image: postgres:14-alpine
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_PASSWORD=${DB_PASSWORD}
  #     - POSTGRES_USER=${DB_USER}
  #     - POSTGRES_DB=${DB_NAME}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data

volumes:
  redis_data:
  # Only uncomment this if you uncomment the db service above
  # postgres_data:

